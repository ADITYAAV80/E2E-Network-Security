---
- name: Build and run Docker container with Vault secrets and create HPA
  hosts: localhost
  become: false
  vars_files:
    - vars/vault-env.yaml
  vars:
    image_name: my_image
    container_name: my-container
    app_port: 8000
    host_port: 9009
    env_file_src: "{{ playbook_dir }}/../.env"
    env_file_dest: "{{ playbook_dir }}/.env"
    hpa_config_file: "{{ playbook_dir }}/hpa.yaml"
    DOCKER_HOST: "unix:///var/run/docker.sock"  # Specify Docker socket here

  tasks:
    - name: install pre-requisites
      pip:
        name:
          - kubernetes

    - name: Activate Conda environment
      shell: |
        source /home/aditya/miniconda3/etc/profile.d/conda.sh
        conda activate network_security
        python3 -m pip show kubernetes
      args:
        executable: /bin/bash

    - name: Copy .env to target location
      ansible.builtin.copy:
        content: "{{ env_vars }}"
        dest: "{{ env_file_dest }}"

    - name: Build Docker image
      community.docker.docker_image:
        name: "{{ image_name }}"
        build:
          path: "{{ playbook_dir }}/.."
        source: build
        docker_host: "{{ DOCKER_HOST }}"  # Specify docker_host explicitly

    - name: Remove existing container if any
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: absent
        force_kill: true

#    - name: Run Docker container with env file
#      community.docker.docker_container:
#        name: "{{ container_name }}"
#        image: "{{ image_name }}"
#        ports:
#          - "{{ host_port }}:{{ app_port }}"
#        env_file: "{{ env_file_dest }}"
#        state: started

    - name: Apply Kubernetes deployment
      k8s:
        state: present
        src: "{{ playbook_dir }}/deployment.yaml"  # Path to your Kubernetes deployment file
        namespace: default


    - name: Apply HPA configuration
      k8s:
        state: present
        src: "{{ hpa_config_file }}"
